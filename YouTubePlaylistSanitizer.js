// ==UserScript==
// @name            YouTubePlaylistSanitizer
// @icon            https://www.youtube.com/favicon.ico
// @noframes
// @include         http*://www.youtube.com/*
// @run-at          document-start
// ==/UserScript==


function sleep(milliseconds) {
    return new Promise(resolve => setTimeout(resolve, milliseconds));
}

function log(text){
    console.log("[YouTubePlaylistSanitizer] " + text);
}

async function init() {
    log("Started")

    // Check URL
    if (!window.location.toString().includes("list=")) {
        log('No playlist detected. Stopping')
        return
    }
    log('Playlist detected')
    await sleep(10000); // Wait 10s for page to load

    var playlistItems = document.querySelectorAll('[id=playlist-items]');
    log("Found " + playlistItems.length + " playlist items");

    // Start from the end to prevent to entries jumping around.
    // Don't check last entry to always have at least one next song in list.
    var endIndex = playlistItems.length - 2
    if (endIndex < 3){
        // Not enough entries
        return
    }
    for (var index = endIndex; index > 0; index--) {
        var playlistItem = playlistItems[index]

        // Do not filter videos already played:
        // Check if the current entry has a playButton displayed (left from the preview image)
        // indicating the currently played video
        var indexTextSpan = playlistItem.querySelectorAll("[id=index]")
        if (indexTextSpan.length != 1){
            log("Playlist entry has no position to display an index for the current video")
            break;
        }
        var text = indexTextSpan[0].textContent
        if (text.length > 0){
            // the video is either the currently playing one (a playButton is displayed), or we are
            // in a playlist not generated by YouTube (the number of the video is displayed)
            // In both cases, we have finished our job
            log("Video with index text found ('" + text + "').")
            break;
        }

        // Check if the thumbnail has an overlay with id 'progress'
        var progressEntries = playlistItem.querySelectorAll('[id=progress]')
        if (progressEntries.length == 0){
            // progress not found -> keep it
            continue
        }
        // progress found -> remove it by clicking the trash button
        var buttons = playlistItem.getElementsByClassName("style-scope yt-icon-button")
        if (!buttons.length == 4){
            log("Unexpected number of buttons. (" + buttons.length + " instead of 4)")
            continue
        }
        var trashButton = buttons[0]
        trashButton.click()
    }
    log("Playlist sanitized")
}


window.addEventListener('load', () => {
    log('window#load')
    init()
})

// Changing videos in a playlist does not trigger the load event
// -> also listen on yt-navigate-start
window.addEventListener('yt-navigate-start', function (event) {
    log('window#yt-navigate-start')
    init()
});
